{"version":3,"sources":["contexts/UserContext.js","components/Error.js","components/LoginForm.js","components/SignUpForm.js","pages/Login.js","components/NavBar.js","contexts/ProductsContext.js","pages/Products.js","pages/Inventory.js","pages/Product.js","pages/EditProduct.js","pages/Container.js","pages/EditContainer.js","pages/App.js","scripts/reportWebVitals.js","index.js"],"names":["UserContext","createContext","UserProvider","children","useState","user","setUser","useEffect","fetch","then","r","ok","json","Provider","value","Error","className","LoginForm","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","useContext","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","err","name","type","autoComplete","onChange","target","map","SignUp","setisLoading","passwordConfirmation","inputState","setInputState","onInputChange","password_confirmation","Login","showLogin","setShowLogin","onClick","SignUpForm","NavBar","navigate","useNavigate","id","to","src","alt","ProductsContext","ProductsProvider","products","setProducts","loading","setLoading","productsData","catch","error","console","Products","vis","setVis","setName","epaReg","setEpaReg","productComps","product","epa_reg","newProduct","prevProducts","Inventory","shelf","setShelf","row","setRow","product_id","concentration","contents","setContents","selectedProduct","setSelectedProduct","containers","handleContentChange","index","updatedContents","tableRows","filter","container","some","content","parseInt","slice","sort","a","b","localeCompare","find","user_id","contents_attributes","prevUser","required","Array","keys","num","char","placeholder","splice","removeContentField","colSpan","length","Product","useParams","status","updatedProducts","EditProduct","updatedProduct","response","data","p","Container","updatedContainers","EditContainer","key","event","updatedContainer","c","i","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kRAEMA,EAAcC,0BAEpB,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SACtB,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,qBAAU,WACRC,MAAM,OAAOC,MAAK,SAACC,GACbA,EAAEC,IACJD,EAAEE,OAAOH,MAAK,SAACJ,GAAD,OAAUC,EAAQD,WAGnC,IAGD,cAACL,EAAYa,SAAb,CAAsBC,MAAO,CAAET,OAAMC,WAArC,SACGH,ICXQY,MAJf,YAA8B,IAAbZ,EAAY,EAAZA,SACf,OAAO,mBAAGa,UAAU,SAAb,SAAuBb,KC6DjBc,MA5Df,WACE,MAAgCb,mBAAS,IAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KACA,EAAgCf,mBAAS,IAAzC,mBAAOgB,EAAP,KAAiBC,EAAjB,KACA,EAA4BjB,mBAAS,IAArC,mBAAOkB,EAAP,KAAeC,EAAf,KACA,EAAkCnB,oBAAS,GAA3C,mBAAOoB,EAAP,KAAkBC,EAAlB,KACQnB,EAAYoB,qBAAW1B,GAAvBM,QAqBR,OACE,uBAAMqB,SApBR,SAAsBC,GACpBA,EAAEC,iBACFJ,GAAa,GACbjB,MAAM,SAAU,CACdsB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEhB,WAAUE,eAChCX,MAAK,SAACC,GACPe,GAAa,GACTf,EAAEC,GACJD,EAAEE,OAAOH,MAAK,SAACJ,GAAD,OAAUC,EAAQD,MAEhCK,EAAEE,OAAOH,MAAK,SAAC0B,GAAD,OAASZ,EAAUY,EAAIb,eAMzC,UACE,6CAEE,uBACEc,KAAK,WACLC,KAAK,OACLC,aAAa,MACbxB,MAAOI,EACPqB,SAAU,SAACX,GAAD,OAAOT,EAAYS,EAAEY,OAAO1B,aAG1C,6CAEE,uBACEsB,KAAK,WACLC,KAAK,WACLC,aAAa,MACbxB,MAAOM,EACPmB,SAAU,SAACX,GAAD,OAAOP,EAAYO,EAAEY,OAAO1B,aAI1C,wBAAQE,UAAU,WAAWqB,KAAK,SAAlC,SACGb,EAAY,aAAe,UAG7BF,EAAOmB,KAAI,SAACN,GAAD,OACV,cAAC,EAAD,UAAkBA,GAANA,U,eCmCLO,MAzFf,WACE,MAA4BtC,mBAAS,IAArC,mBAAOkB,EAAP,KAAeC,EAAf,KACA,EAAkCnB,oBAAS,GAA3C,mBAAOoB,EAAP,KAAkBmB,EAAlB,KACQrC,EAAYoB,qBAAW1B,GAAvBM,QAER,EAAoCF,mBAAS,CAC3Cc,SAAU,GACVE,SAAU,GACVwB,qBAAsB,KAHxB,mBAAOC,EAAP,KAAmBC,EAAnB,KAMQ5B,EAA6C2B,EAA7C3B,SAAUE,EAAmCyB,EAAnCzB,SAAUwB,EAAyBC,EAAzBD,qBAE5B,SAASG,EAAcnB,GACrBkB,EAAc,2BACTD,GADQ,kBAEVjB,EAAEY,OAAOJ,KAAOR,EAAEY,OAAO1B,SA4B9B,OACE,uBAAMa,SAzBR,SAAsBC,GACpBA,EAAEC,iBACFN,EAAU,IACVoB,GAAa,GACbnC,MAAM,UAAW,CACfsB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBhB,WACAE,WACA4B,sBAAuBJ,MAExBnC,MAAK,SAACC,GACPiC,GAAa,GACTjC,EAAEC,GACJD,EAAEE,OAAOH,MAAK,SAACJ,GAAD,OAAUC,EAAQD,MAEhCK,EAAEE,OAAOH,MAAK,SAAC0B,GAAD,OAASZ,EAAUY,EAAIb,eAMzC,UACE,6CAEE,uBACEc,KAAK,WACLC,KAAK,OACLC,aAAa,MACbxB,MAAOI,EACPqB,SAAUQ,OAGd,6CAEE,uBACEX,KAAK,WACLC,KAAK,WACLC,aAAa,MACbxB,MAAOM,EACPmB,SAAUQ,OAGd,0DAEE,uBACEX,KAAK,uBACLC,KAAK,WACLC,aAAa,MACbxB,MAAO8B,EACPL,SAAUQ,OAId,wBAAQ/B,UAAU,WAAWqB,KAAK,SAAlC,SACGb,EAAY,aAAe,YAE9B,qBAAKR,UAAU,aAAf,SACGM,EAAOmB,KAAI,SAACN,GAAD,OACV,cAAC,EAAD,UAAkBA,GAANA,YCnDPc,MA/Bf,WACE,MAAkC7C,oBAAS,GAA3C,mBAAO8C,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKnC,UAAU,UAAf,UACE,0DACCkC,EACC,qCACE,cAAC,EAAD,IACA,4DAEE,wBAAQlC,UAAU,WAAWoC,QAAS,kBAAMD,GAAa,IAAzD,2BAMJ,qCACE,cAACE,EAAD,IACA,8DAEE,wBAAQrC,UAAU,WAAWoC,QAAS,kBAAMD,GAAa,IAAzD,8B,cCgBGG,MArCf,WACE,IAAMC,EAAWC,cACTlD,EAAYoB,qBAAW1B,GAAvBM,QAcR,OACE,sBAAKmD,GAAG,SAAR,UACE,cAAC,IAAD,CAASC,GAAG,IAAZ,SACE,qBAAK1C,UAAU,WAAW2C,IAAI,wBAAwBC,IAAI,WAE5D,cAAC,IAAD,CAASF,GAAG,IAAZ,SACE,oBAAI1C,UAAU,OAAd,wCAEF,cAAC,IAAD,CAASA,UAAU,UAAU0C,GAAE,IAA/B,uBAGA,cAAC,IAAD,CAAS1C,UAAU,UAAU0C,GAAG,YAAhC,sBAGA,cAAC,IAAD,CAASN,QAzBb,WACE5C,MAAM,UAAW,CACfsB,OAAQ,WACPrB,MAAK,SAACC,GACHA,EAAEC,KACJL,EAAQ,MACRiD,EAAS,UAmBqBvC,UAAU,UAAU0C,GAAG,IAAvD,wB,OChCAG,EAAkB5D,0BAExB,SAAS6D,EAAT,GAAyC,IAAb3D,EAAY,EAAZA,SAC1B,EAAgCC,mBAAS,IAAzC,mBAAO2D,EAAP,KAAiBC,EAAjB,KACA,EAA8B5D,oBAAS,GAAvC,mBAAO6D,EAAP,KAAgBC,EAAhB,KAoBA,OAlBA3D,qBAAU,WACRC,MAAM,aACHC,MAAK,SAACC,GACL,GAAIA,EAAEC,GACJ,OAAOD,EAAEE,OAEX,MAAM,IAAIG,MAAM,+BAEjBN,MAAK,SAAC0D,GACLH,EAAYG,GACZD,GAAW,MAEZE,OAAM,SAACC,GACNC,QAAQD,MAAM,2BAA4BA,GAC1CH,GAAW,QAEd,IAECD,EACK,wBAIP,cAACJ,EAAgBhD,SAAjB,CAA0BC,MAAO,CAAEiD,WAAUC,eAA7C,SACG7D,IC8EQoE,MA1Gf,WACE,MAAkC7C,qBAAWmC,GAArCE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAClB,EAAsB5D,oBAAS,GAA/B,mBAAOoE,EAAP,KAAYC,EAAZ,KACA,EAAwBrE,mBAAS,IAAjC,mBAAOgC,EAAP,KAAasC,EAAb,KACA,EAA4BtE,mBAAS,IAArC,mBAAOuE,EAAP,KAAeC,EAAf,KAsCA,IAAKb,EACH,OAAO,wBAGT,IAAIc,EAAed,EAAStB,KAAI,SAACqC,GAC/B,OACE,+BACE,6BACE,cAAC,IAAD,CAAMpB,GAAE,oBAAeoB,EAAQrB,IAA/B,SAAsCqB,EAAQ1C,SAEhD,6BAAK0C,EAAQC,YAJND,EAAQrB,OAarB,OACE,sBAAKzC,UAAU,kBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,wBAAQoC,QAPd,WACEqB,GAAQD,IAMwBxD,UAAU,WAAtC,SACGwD,EAAM,SAAW,kBAEpB,8BACGA,EACC,uBAAM7C,SAvDhB,SAAsBC,GACpBA,EAAEC,iBACF,IAAMmD,EAAa,CAAE5C,OAAM2C,QAASJ,GAEpCnE,MAAM,YAAa,CACjBsB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU8C,KAEpBvE,MAAK,SAACC,GACL,IAAKA,EAAEC,GACL,MAAM,IAAII,MAAM,yBAElB,OAAOL,EAAEE,UAEVH,MAAK,SAACqE,GACLd,GAAY,SAACiB,GAAD,4BAAsBA,GAAtB,CAAoCH,OAChDJ,EAAQ,IACRE,EAAU,IACVH,GAAO,MAERL,OAAM,SAACC,GACNC,QAAQD,MAAM,wBAAyBA,OA+BnC,UACE,iDAEE,uBACEhC,KAAK,OACLvB,MAAOsB,EACPG,SArEhB,SAA0BX,GACxB8C,EAAQ9C,EAAEY,OAAO1B,aAuEP,8CAEE,uBACEuB,KAAK,OACLvB,MAAO6D,EACPpC,SAzEhB,SAA4BX,GAC1BgD,EAAUhD,EAAEY,OAAO1B,aA2ET,wBAAQuB,KAAK,SAASrB,UAAU,WAAhC,+BAIA,UAGR,wBAAOA,UAAU,QAAjB,UACE,gCACE,qBAAIA,UAAU,mBAAd,UACE,sCACA,gDAGJ,gCAAQ6D,WCsJDK,MAzPf,WACE,MAA0BxD,qBAAW1B,GAA7BK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACNyD,EAAarC,qBAAWmC,GAAxBE,SACR,EAAsB3D,oBAAS,GAA/B,mBAAOoE,EAAP,KAAYC,EAAZ,KACA,EAA0BrE,mBAAS,GAAnC,mBAAO+E,EAAP,KAAcC,EAAd,KACA,EAAsBhF,mBAAS,KAA/B,mBAAOiF,EAAP,KAAYC,EAAZ,KACA,EAAgClF,mBAAS,CACvC,CAAEmF,WAAY,GAAIC,cAAe,MADnC,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAA8BtF,oBAAS,GAAvC,mBAAO6D,EAAP,KAAgBC,EAAhB,KACA,EAA8C9D,mBAAS,IAAvD,mBAAOuF,EAAP,KAAwBC,EAAxB,KAQA,GANArF,qBAAU,WACJF,GAAQA,EAAKwF,YACf3B,GAAW,KAEZ,CAAC7D,IAEA4D,EACF,OAAO,2CAGT,IAYM6B,EAAsB,SAACC,EAAOnE,GAClC,MAAwBA,EAAEY,OAAlBJ,EAAR,EAAQA,KAAMtB,EAAd,EAAcA,MACRkF,EAAe,YAAOP,GAC5BO,EAAgBD,GAAO3D,GAAQtB,EAC/B4E,EAAYM,IAyERC,GAlBqBN,EACvBtF,EAAKwF,WAAWK,QAAO,SAACC,GAAD,OACrBA,EAAUV,SAASW,MACjB,SAACC,GAAD,OAAaA,EAAQd,aAAee,SAASX,SAGjDtF,EAAKwF,YAGmCU,QAAQC,MAAK,SAACC,EAAGC,GAE3D,OAAID,EAAEtB,QAAUuB,EAAEvB,MACTsB,EAAEtB,MAAQuB,EAAEvB,MAGdsB,EAAEpB,IAAIsB,cAAcD,EAAErB,QAGI5C,KAAI,SAAC0D,GAAD,OACrC,+BACE,6BACE,cAAC,IAAD,CAASzC,GAAE,sBAAiByC,EAAU1C,IAAMzC,UAAU,UAAtD,SACGmF,EAAUhB,UAGf,6BACE,cAAC,IAAD,CAASzB,GAAE,sBAAiByC,EAAU1C,IAAMzC,UAAU,UAAtD,SACGmF,EAAUd,QAGdc,EAAUV,SAAShD,KAAI,SAAC4D,EAASN,GAAV,aACtB,6BACE,eAAC,IAAD,CAASrC,GAAE,sBAAiByC,EAAU1C,IAAMzC,UAAU,UAAtD,UACGqF,EAAQb,cADX,IAC2B,IAD3B,UAGIzB,EAAS6C,MAAK,SAAC9B,GAAD,OAAaA,EAAQrB,KAAO4C,EAAQd,qBAHtD,aAGI,EACInD,SALD2D,QAZJI,EAAU1C,OAyBrB,OACE,qCACE,sBAAKzC,UAAU,oBAAf,UACE,wBAAQoC,QAtHI,WAChBqB,GAAQD,IAqHwBxD,UAAU,WAAtC,SACGwD,EAAM,SAAW,oBAEpB,8BACGA,EACC,uBAAM7C,SA9FK,SAACC,GACpBA,EAAEC,iBACF,IAAMsE,EAAY,CAChBU,QAASxG,EAAKoD,GACd0B,MAAOA,EACPE,IAAKA,EACLyB,oBAAqBrB,GAGvBjF,MAAM,cAAe,CACnBsB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEiE,gBAEtB1F,MAAK,SAACC,GACL,IAAKA,EAAEC,GACL,MAAM,IAAII,MAAM,2BAElB,OAAOL,EAAEE,UAEVH,MAAK,SAAC0F,GACL7F,GAAQ,SAACyG,GAAD,mBAAC,eACJA,GADG,IAENlB,WAAW,GAAD,mBAAMkB,EAASlB,YAAf,CAA2BM,SAEvCf,EAAS,GACTE,EAAO,KACPI,EAAY,CAAC,CAAEH,WAAY,GAAIC,cAAe,MAC9Cf,GAAO,MAERL,OAAM,SAACC,GACNC,QAAQD,MAAM,0BAA2BA,OA6DrC,UACE,sBAAKrD,UAAU,cAAf,UACE,wBAAOA,UAAU,WAAjB,mBAEE,wBAAQF,MAAOqE,EAAO5C,SA3HZ,SAACX,GACzBwD,EAASkB,SAAS1E,EAAEY,OAAO1B,SA0HsCkG,UAAQ,EAA3D,SACG,YAAIC,MAAM,IAAIC,QAAQzE,KAAI,SAAC0E,GAAD,OACzB,wBAAsBrG,MAAOqG,EAAM,EAAnC,SACGA,EAAM,GADIA,EAAM,WAMzB,wBAAOnG,UAAU,WAAjB,iBAEE,wBAAQF,MAAOuE,EAAK9C,SAjIZ,SAACX,GACvB0D,EAAO1D,EAAEY,OAAO1B,QAgI6CkG,UAAQ,EAAvD,SACG,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKvE,KAAI,SAAC2E,GAAD,OAC7B,wBAAmBtG,MAAOsG,EAA1B,SACGA,GADUA,WAMlB3B,EAAShD,KAAI,SAAC4D,EAASN,GAAV,OACZ,sBAAK/E,UAAU,WAAf,UACE,yBACEF,MAAOuF,EAAQd,WACfhD,SAAU,SAACX,GAAD,OAAOkE,EAAoBC,EAAOnE,IAC5CQ,KAAK,aACL4E,UAAQ,EAJV,UAME,wBAAQlG,MAAM,GAAd,8BACCiD,EAAStB,KAAI,SAACqC,GAAD,OACZ,wBAAyBhE,MAAOgE,EAAQrB,GAAxC,SACGqB,EAAQ1C,MADE0C,EAAQrB,UAKzB,gCACE,uBACEpB,KAAK,SACLgF,YAAY,gBACZvG,MAAOuF,EAAQb,cACfjD,SAAU,SAACX,GAAD,OAAOkE,EAAoBC,EAAOnE,IAC5CQ,KAAK,gBACL4E,UAAQ,MAGZ,wBACEhG,UAAU,cACVqB,KAAK,SACLe,QAAS,kBAtJF,SAAC2C,GAC1B,IAAMC,EAAe,YAAOP,GAC5BO,EAAgBsB,OAAOvB,EAAO,GAC9BL,EAAYM,GAmJqBuB,CAAmBxB,IAHpC,sBAxB6BA,MAiCjC,wBACE/E,UAAU,+BACVqB,KAAK,SACLe,QAnKQ,WACtBsC,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAAEF,WAAY,GAAIC,cAAe,QA+J/C,kCAQF,wBAAQnD,KAAK,SAASrB,UAAU,sBAAhC,iCAIA,UAIR,qBAAKA,UAAU,mBAAf,SACE,sDAEE,yBACEF,MAAO6E,EACPpD,SAtIwB,SAACX,GACjCgE,EAAmBhE,EAAEY,OAAO1B,QAsIpBE,UAAU,SAHZ,UAKE,wBAAQF,MAAM,GAAd,0BACCiD,EAAStB,KAAI,SAACqC,GAAD,OACZ,wBAAyBhE,MAAOgE,EAAQrB,GAAxC,SACGqB,EAAQ1C,MADE0C,EAAQrB,eAQ7B,wBAAOzC,UAAU,kBAAjB,UACE,gCACE,+BACE,uCACA,qCACA,oBAAIwG,QAASzD,EAAS0D,OAAS,EAA/B,2BAGJ,gCAAQxB,WChMDyB,MApDf,WACE,IAAMnE,EAAWC,cACXC,EAAOkE,cAAPlE,GACNA,EAAK6C,SAAS7C,GACd,MAAkC/B,qBAAWmC,GAArCE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YACZc,EAAUf,EAAS6C,MAAK,SAAC9B,GAAD,OAAaA,EAAQrB,KAAO6C,SAAS7C,MAEnE,OAAKqB,EA4BH,qBAAK9D,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UACE,6BAAK8D,EAAQ1C,OACb,0CAAa0C,EAAQC,WACrB,sBAAK/D,UAAU,kBAAf,UACE,wBAAQA,UAAU,wBAAlB,SACE,cAAC,IAAD,CAAM0C,GAAE,oBAAeD,EAAf,SAAR,oBAEF,wBAAQzC,UAAU,0BAA0BoC,QAhCpD,WACE5C,MAAM,aAAD,OAAciD,GAAM,CACvB3B,OAAQ,WAEPrB,MAAK,SAACC,GACL,IAAKA,EAAEC,GACL,MAAM,IAAII,MAAM,4BAElB,OAAiB,MAAbL,EAAEkH,OACG,GAEFlH,EAAEE,UAEVH,MAAK,WACJ,IAAMoH,EAAkB9D,EAASmC,QAAO,SAACpB,GAAD,OAAaA,EAAQrB,KAAOA,KACpEO,EAAY6D,GACZtE,EAAS,gBAEVa,OAAM,SAACC,GACNC,QAAQD,MAAM,0BAA2BA,OAavC,4BAnCC,mDC4DIyD,MApEf,WACE,IAAMvE,EAAWC,cACXC,EAAOkE,cAAPlE,GACNA,EAAK6C,SAAS7C,GACd,MAAkC/B,qBAAWmC,GAArCE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YACZc,EAAUf,EAAS6C,MAAK,SAAC9B,GAAD,OAAaA,EAAQrB,KAAO6C,SAAS7C,MAEnE,EAAwBrD,mBAAS0E,EAAQ1C,MAAzC,mBAAOA,EAAP,KAAasC,EAAb,KACA,EAA4BtE,mBAAS0E,EAAQC,SAA7C,mBAAOJ,EAAP,KAAeC,EAAf,KAyCA,OACE,qBAAK5D,UAAU,YAAf,SACE,uBAAMW,SAjCW,SAACC,GACpBA,EAAEC,iBACF,IAAMkG,EAAc,2BAAQjD,GAAR,IAAiB1C,OAAM2C,QAASJ,IAGpDnE,MAAM,aAAD,OAAciD,GAAM,CACvB3B,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU6F,KAEpBtH,MAAK,SAACuH,GACL,IAAKA,EAASrH,GACZ,MAAM,IAAII,MAAM,4BAElB,OAAOiH,EAASpH,UAEjBH,MAAK,SAACwH,GACL,IAAMJ,EAAkB9D,EAAStB,KAAI,SAACyF,GAAD,OACnCA,EAAEzE,KAAOsE,EAAetE,GAAKsE,EAAiBG,KAEhDlE,EAAY6D,GACZtE,EAAS,gBAEVa,OAAM,SAACC,GACNC,QAAQD,MAAM,0BAA2BA,OAO3C,UACE,yCAEE,uBAAOhC,KAAK,OAAOvB,MAAOsB,EAAMG,SA5Cf,SAACX,GACxB8C,EAAQ9C,EAAEY,OAAO1B,aA6Cb,4CAEE,uBAAOuB,KAAK,OAAOvB,MAAO6D,EAAQpC,SA5Cf,SAACX,GAC1BgD,EAAUhD,EAAEY,OAAO1B,aA6Cf,wBAAQuB,KAAK,SAASrB,UAAU,WAAhC,0BCmBOmH,MA9Ef,WACE,IAAM5E,EAAWC,cAEXC,EAAOkE,cAAPlE,GACNA,EAAK6C,SAAS7C,GAEd,MAA0B/B,qBAAW1B,GAA7BK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACNyD,EAAarC,qBAAWmC,GAAxBE,SAEFoC,EAAY9F,EAAKwF,WAAWe,MAAK,SAACT,GAAD,OAAeA,EAAU1C,KAAOA,KAEvE,OAAK0C,EA8BH,gCACE,wBAAOnF,UAAU,iCAAjB,UACE,gCACE,+BACE,uCACA,qCACA,oBAAIwG,QAASzD,EAAS0D,OAAS,EAA/B,2BAGJ,gCACE,+BACE,6BAAKtB,EAAUhB,QACf,6BAAKgB,EAAUd,MACdc,EAAUV,SAAShD,KAAI,SAAC4D,EAASN,GAAV,aACtB,+BACGM,EAAQb,cADX,KAC4B,GAD5B,UAGIzB,EAAS6C,MAAK,SAAC9B,GAAD,OAAaA,EAAQrB,KAAO4C,EAAQd,qBAHtD,aAGI,EACInD,OAJC2D,cAWjB,sBAAK/E,UAAU,kBAAf,UACE,wBAAQA,UAAU,WAAlB,SACE,cAAC,IAAD,CAAM0C,GAAE,sBAAiBD,EAAjB,SAAR,oBAEF,wBAAQzC,UAAU,aAAaoC,QAvDrC,WACE5C,MAAM,eAAD,OAAgBiD,GAAM,CACzB3B,OAAQ,WAEPrB,MAAK,SAACC,GACL,IAAKA,EAAEC,GACL,MAAM,IAAII,MAAM,4BAElB,OAAiB,MAAbL,EAAEkH,OACG,GAEFlH,EAAEE,UAEVH,MAAK,WACJ,IAAM2H,EAAoB/H,EAAKwF,WAAWK,QACxC,SAACC,GAAD,OAAeA,EAAU1C,KAAOA,KAElCnD,EAAQ,2BAAKD,GAAN,IAAYwF,WAAYuC,KAC/B7E,EAAS,QAEVa,OAAM,SAACC,GACNC,QAAQD,MAAM,0BAA2BA,OAkCzC,0BA1DG,4CCkIIgE,MA9If,WACE,IAAM9E,EAAWC,cACXC,EAAOkE,cAAPlE,GACNA,EAAK6C,SAAS7C,GAEd,MAA0B/B,qBAAW1B,GAA7BK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACNyD,EAAarC,qBAAWmC,GAAxBE,SAEFoC,EAAY9F,EAAKwF,WAAWe,MAAK,SAACT,GAAD,OAAeA,EAAU1C,KAAOA,KAEvE,EAA0BrD,oBAAkB,OAAT+F,QAAS,IAATA,OAAA,EAAAA,EAAWhB,QAAS,IAAvD,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAAsBhF,oBAAkB,OAAT+F,QAAS,IAATA,OAAA,EAAAA,EAAWd,MAAO,IAAjD,mBAAOA,EAAP,KAAYC,EAAZ,KACA,EAAgClF,oBAAkB,OAAT+F,QAAS,IAATA,OAAA,EAAAA,EAAWV,WAAY,IAAhE,mBAAOA,EAAP,KAAiBC,EAAjB,KAkBA,SAASI,EAAoBC,EAAOuC,EAAKxH,GACvC,IAAMkF,EAAe,YAAOP,GAC5BO,EAAgBD,GAAOuC,GAAOxH,EAC9B4E,EAAYM,GAqCd,OAxDAzF,qBAAU,WACJ4F,IACFf,EAASe,EAAUhB,OACnBG,EAAOa,EAAUd,KACjBK,EAAYS,EAAUV,aAEvB,CAACU,IAkDCA,EAKH,qBAAKnF,UAAU,YAAf,SACE,uBAAMW,SAxCV,SAAsB4G,GACpBA,EAAM1G,iBACN,IAAM2G,EAAmB,CACvB/E,GAAI0C,EAAU1C,GACd0B,QACAE,MACAyB,oBAAqBrB,GAGvBjF,MAAM,eAAD,OAAgBiD,GAAM,CACzB3B,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEiE,UAAWqC,MAEjC/H,MAAK,SAACC,GACL,IAAKA,EAAEC,GACL,MAAM,IAAII,MAAM,8BAElB,OAAOL,EAAEE,UAEVH,MAAK,SAAC+H,GACL,IAAMJ,EAAoB/H,EAAKwF,WAAWpD,KAAI,SAACgG,GAAD,OAC5CA,EAAEhF,KAAOA,EAAK+E,EAAmBC,KAEnCnI,EAAQ,2BAAKD,GAAN,IAAYwF,WAAYuC,KAC/B7E,EAAS,QAEVa,OAAM,SAACC,GACNC,QAAQD,MAAM,4BAA6BA,OAU7C,UACE,0CAEE,wBAAQvD,MAAOqE,EAAO5C,SAzD9B,SAA2BgG,GACzBnD,EAASmD,EAAM/F,OAAO1B,QAwDhB,SACG,YAAImG,MAAM,IAAIC,QAAQzE,KAAI,SAACiG,GAAD,OACzB,wBAAoB5H,MAAO4H,EAAI,EAA/B,SACGA,EAAI,GADMA,EAAI,WAMvB,wCAEE,wBAAQ5H,MAAOuE,EAAK9C,SA/D5B,SAAyBgG,GACvBjD,EAAOiD,EAAM/F,OAAO1B,QA8Dd,SACG,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK2B,KAAI,SAAC/B,GAAD,OAC7B,wBAAgBI,MAAOJ,EAAvB,SACGA,GADUA,WAMlB+E,EAAShD,KAAI,SAAC4D,EAASN,GAAV,OACZ,gCACE,4CAEE,wBACEjF,MAAOuF,EAAQd,WACfhD,SAAU,SAACX,GAAD,OACRkE,EACEC,EACA,aACAO,SAAS1E,EAAEY,OAAO1B,SANxB,SAUGiD,EAAStB,KAAI,SAACqC,GAAD,OACZ,wBAAyBhE,MAAOgE,EAAQrB,GAAxC,SACGqB,EAAQ1C,MADE0C,EAAQrB,YAM3B,kDAEE,uBACEpB,KAAK,SACLvB,MAAOuF,EAAQb,cACfjD,SAAU,SAACX,GAAD,OACRkE,EACEC,EACA,gBACAO,SAAS1E,EAAEY,OAAO1B,gBA7BlBiF,MAoCZ,wBAAQ1D,KAAK,SAASrB,UAAU,WAAhC,yBA/DG,4CCtCI2H,MAzBf,WAEE,OADiBjH,qBAAW1B,GAApBK,KAMN,qCACE,wBAAQW,UAAU,SAAlB,SACE,cAAC,EAAD,MAEF,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4H,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,qBAAqBC,QAAS,cAAC,EAAD,MAC1C,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,EAAD,MACvC,cAAC,IAAD,CAAOD,KAAK,uBAAuBC,QAAS,cAAC,EAAD,cAf3C,cAAC,EAAD,KCJIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvI,MAAK,YAAkD,IAA/CwI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAD,UACE,cAACrJ,EAAD,UACE,cAAC4D,EAAD,UACE,cAAC,EAAD,UAIN0F,SAASC,eAAe,SAM1BX,M","file":"static/js/main.5c2b6915.chunk.js","sourcesContent":["import { useState, useEffect, createContext } from \"react\";\n\nconst UserContext = createContext();\n\nfunction UserProvider({ children }) {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport { UserContext, UserProvider };\n","import React from \"react\";\n\nfunction Error({ children }) {\n  return <p className=\"errors\">{children}</p>;\n}\n\nexport default Error;\n","import { useState, useContext } from \"react\";\nimport Error from \"./Error\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nfunction LoginForm() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { setUser } = useContext(UserContext);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Username\n        <input\n          name=\"username\"\n          type=\"text\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        ></input>\n      </label>\n      <label>\n        Password\n        <input\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"off\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        ></input>\n      </label>\n\n      <button className=\"blue-btn\" type=\"submit\">\n        {isLoading ? \"Loading...\" : \"Login\"}\n      </button>\n\n      {errors.map((err) => (\n        <Error key={err}>{err}</Error>\n      ))}\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import { useState, useContext } from \"react\";\nimport Error from \"./Error\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nfunction SignUp() {\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const { setUser } = useContext(UserContext);\n\n  const [inputState, setInputState] = useState({\n    username: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n  });\n\n  const { username, password, passwordConfirmation } = inputState;\n\n  function onInputChange(e) {\n    setInputState({\n      ...inputState,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setisLoading(true);\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n      }),\n    }).then((r) => {\n      setisLoading(false);\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Username\n        <input\n          name=\"username\"\n          type=\"text\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={onInputChange}\n        ></input>\n      </label>\n      <label>\n        Password\n        <input\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"off\"\n          value={password}\n          onChange={onInputChange}\n        ></input>\n      </label>\n      <label>\n        Password Confirmation\n        <input\n          name=\"passwordConfirmation\"\n          type=\"password\"\n          autoComplete=\"off\"\n          value={passwordConfirmation}\n          onChange={onInputChange}\n        ></input>\n      </label>\n\n      <button className=\"blue-btn\" type=\"submit\">\n        {isLoading ? \"Loading...\" : \"Sign Up\"}\n      </button>\n      <div className=\"errors-div\">\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </div>\n    </form>\n  );\n}\n\nexport default SignUp;\n","import { useState } from \"react\";\nimport LoginForm from \"../components/LoginForm\";\nimport SignUpForm from \"../components/SignUpForm\";\n\nfunction Login() {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <div className=\"wrapper\">\n      <h1>ACFM Pesticide Inventory</h1>\n      {showLogin ? (\n        <>\n          <LoginForm />\n          <p>\n            Don't have an account? &nbsp;\n            <button className=\"blue-btn\" onClick={() => setShowLogin(false)}>\n              Sign Up\n            </button>\n          </p>\n        </>\n      ) : (\n        <>\n          <SignUpForm />\n          <p>\n            Already have an account? &nbsp;\n            <button className=\"blue-btn\" onClick={() => setShowLogin(true)}>\n              Log In\n            </button>\n          </p>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Login;\n","import { useContext } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nfunction NavBar() {\n  const navigate = useNavigate();\n  const { setUser } = useContext(UserContext);\n  // const { id } = user;\n\n  function handleLogout() {\n    fetch(\"/logout\", {\n      method: \"DELETE\",\n    }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n        navigate(\"/\");\n      }\n    });\n  }\n\n  return (\n    <nav id=\"navbar\">\n      <NavLink to=\"/\">\n        <img className=\"logo-img\" src=\"/assets/acfm-logo.svg\" alt=\"logo\"></img>\n      </NavLink>\n      <NavLink to=\"/\">\n        <h2 className=\"logo\">ACFM Pesticide Inventory</h2>\n      </NavLink>\n      <NavLink className=\"nav-btn\" to={`/`}>\n        Inventory\n      </NavLink>\n      <NavLink className=\"nav-btn\" to=\"/products\">\n        Products\n      </NavLink>\n      <NavLink onClick={handleLogout} className=\"nav-btn\" to=\"/\">\n        Logout\n      </NavLink>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import { useState, useEffect, createContext } from \"react\";\n\nconst ProductsContext = createContext();\n\nfunction ProductsProvider({ children }) {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"/products\")\n      .then((r) => {\n        if (r.ok) {\n          return r.json();\n        }\n        throw new Error(\"Failed to fetch products\");\n      })\n      .then((productsData) => {\n        setProducts(productsData);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching products:\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return <div></div>;\n  }\n\n  return (\n    <ProductsContext.Provider value={{ products, setProducts }}>\n      {children}\n    </ProductsContext.Provider>\n  );\n}\n\nexport { ProductsContext, ProductsProvider };\n","import { useContext, useState } from \"react\";\nimport { ProductsContext } from \"../contexts/ProductsContext\";\nimport { Link } from \"react-router-dom\";\n\nfunction Products() {\n  const { products, setProducts } = useContext(ProductsContext);\n  const [vis, setVis] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [epaReg, setEpaReg] = useState(\"\");\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleEpaRegChange(e) {\n    setEpaReg(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newProduct = { name, epa_reg: epaReg };\n\n    fetch(\"/products\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newProduct),\n    })\n      .then((r) => {\n        if (!r.ok) {\n          throw new Error(\"Failed to add product\");\n        }\n        return r.json();\n      })\n      .then((product) => {\n        setProducts((prevProducts) => [...prevProducts, product]);\n        setName(\"\");\n        setEpaReg(\"\");\n        setVis(false);\n      })\n      .catch((error) => {\n        console.error(\"Error adding product:\", error);\n      });\n  }\n\n  if (!products) {\n    return <div></div>;\n  }\n\n  let productComps = products.map((product) => {\n    return (\n      <tr key={product.id}>\n        <td>\n          <Link to={`/products/${product.id}`}>{product.name}</Link>\n        </td>\n        <td>{product.epa_reg}</td>\n      </tr>\n    );\n  });\n\n  function handleVis() {\n    setVis(!vis);\n  }\n\n  return (\n    <div className=\"table-container\">\n      <div className=\"center margin-3em\">\n        <button onClick={handleVis} className=\"blue-btn\">\n          {vis ? \"Cancel\" : \"Add a Product\"}\n        </button>\n        <div>\n          {vis ? (\n            <form onSubmit={handleSubmit}>\n              <label>\n                Product Name\n                <input\n                  type=\"text\"\n                  value={name}\n                  onChange={handleNameChange}\n                ></input>\n              </label>\n              <label>\n                EPA Reg #\n                <input\n                  type=\"text\"\n                  value={epaReg}\n                  onChange={handleEpaRegChange}\n                ></input>\n              </label>\n              <button type=\"submit\" className=\"blue-btn\">\n                Submit Product\n              </button>\n            </form>\n          ) : null}\n        </div>\n      </div>\n      <table className=\"table\">\n        <thead>\n          <tr className=\"table-header-row\">\n            <th>Name</th>\n            <th>EPA Reg #</th>\n          </tr>\n        </thead>\n        <tbody>{productComps}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Products;\n","import { useContext, useState, useEffect } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport { ProductsContext } from \"../contexts/ProductsContext\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Inventory() {\n  const { user, setUser } = useContext(UserContext);\n  const { products } = useContext(ProductsContext);\n  const [vis, setVis] = useState(false);\n  const [shelf, setShelf] = useState(1); // Default shelf selection\n  const [row, setRow] = useState(\"A\"); // Default row selection\n  const [contents, setContents] = useState([\n    { product_id: \"\", concentration: \"\" },\n  ]);\n  const [loading, setLoading] = useState(true);\n  const [selectedProduct, setSelectedProduct] = useState(\"\"); // State for filtering by product\n\n  useEffect(() => {\n    if (user && user.containers) {\n      setLoading(false);\n    }\n  }, [user]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  const handleVis = () => {\n    setVis(!vis);\n  };\n\n  const handleShelfChange = (e) => {\n    setShelf(parseInt(e.target.value));\n  };\n\n  const handleRowChange = (e) => {\n    setRow(e.target.value);\n  };\n\n  const handleContentChange = (index, e) => {\n    const { name, value } = e.target;\n    const updatedContents = [...contents];\n    updatedContents[index][name] = value;\n    setContents(updatedContents);\n  };\n\n  const addContentField = () => {\n    setContents([...contents, { product_id: \"\", concentration: \"\" }]);\n  };\n\n  const removeContentField = (index) => {\n    const updatedContents = [...contents];\n    updatedContents.splice(index, 1);\n    setContents(updatedContents);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const container = {\n      user_id: user.id,\n      shelf: shelf,\n      row: row,\n      contents_attributes: contents, // Ensure contents are correctly nested\n    };\n\n    fetch(\"/containers\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ container }),\n    })\n      .then((r) => {\n        if (!r.ok) {\n          throw new Error(\"Failed to add container\");\n        }\n        return r.json();\n      })\n      .then((container) => {\n        setUser((prevUser) => ({\n          ...prevUser,\n          containers: [...prevUser.containers, container],\n        }));\n        setShelf(1); // Reset to default after submission\n        setRow(\"A\"); // Reset to default after submission\n        setContents([{ product_id: \"\", concentration: \"\" }]);\n        setVis(false);\n      })\n      .catch((error) => {\n        console.error(\"Error adding container:\", error);\n      });\n  };\n\n  const handleProductFilterChange = (e) => {\n    setSelectedProduct(e.target.value);\n  };\n\n  // Filter containers based on selected product\n  const filteredContainers = selectedProduct\n    ? user.containers.filter((container) =>\n        container.contents.some(\n          (content) => content.product_id === parseInt(selectedProduct)\n        )\n      )\n    : user.containers;\n\n  // Sorting containers alphanumerically by shelf and row\n  const sortedContainers = filteredContainers.slice().sort((a, b) => {\n    // Sort by shelf first\n    if (a.shelf !== b.shelf) {\n      return a.shelf - b.shelf;\n    }\n    // Then sort by row alphabetically\n    return a.row.localeCompare(b.row);\n  });\n\n  const tableRows = sortedContainers.map((container) => (\n    <tr key={container.id}>\n      <td>\n        <NavLink to={`/containers/${container.id}`} className=\"navlink\">\n          {container.shelf}\n        </NavLink>\n      </td>\n      <td>\n        <NavLink to={`/containers/${container.id}`} className=\"navlink\">\n          {container.row}\n        </NavLink>\n      </td>\n      {container.contents.map((content, index) => (\n        <td key={index}>\n          <NavLink to={`/containers/${container.id}`} className=\"navlink\">\n            {content.concentration}%{\" \"}\n            {\n              products.find((product) => product.id === content.product_id)\n                ?.name\n            }\n          </NavLink>\n        </td>\n      ))}\n    </tr>\n  ));\n\n  return (\n    <>\n      <div className=\"center margin-3em\">\n        <button onClick={handleVis} className=\"blue-btn\">\n          {vis ? \"Cancel\" : \"Add a Container\"}\n        </button>\n        <div>\n          {vis ? (\n            <form onSubmit={handleSubmit}>\n              <div className=\"flex-column\">\n                <label className=\"flex-row\">\n                  Shelf:\n                  <select value={shelf} onChange={handleShelfChange} required>\n                    {[...Array(10).keys()].map((num) => (\n                      <option key={num + 1} value={num + 1}>\n                        {num + 1}\n                      </option>\n                    ))}\n                  </select>\n                </label>\n                <label className=\"flex-row\">\n                  Row:\n                  <select value={row} onChange={handleRowChange} required>\n                    {[\"A\", \"B\", \"C\", \"D\", \"E\"].map((char) => (\n                      <option key={char} value={char}>\n                        {char}\n                      </option>\n                    ))}\n                  </select>\n                </label>\n                {contents.map((content, index) => (\n                  <div className=\"flex-row\" key={index}>\n                    <select\n                      value={content.product_id}\n                      onChange={(e) => handleContentChange(index, e)}\n                      name=\"product_id\"\n                      required\n                    >\n                      <option value=\"\">Select a product</option>\n                      {products.map((product) => (\n                        <option key={product.id} value={product.id}>\n                          {product.name}\n                        </option>\n                      ))}\n                    </select>\n                    <label>\n                      <input\n                        type=\"number\"\n                        placeholder=\"Concentration\"\n                        value={content.concentration}\n                        onChange={(e) => handleContentChange(index, e)}\n                        name=\"concentration\"\n                        required\n                      />\n                    </label>\n                    <button\n                      className=\"grey-button\"\n                      type=\"button\"\n                      onClick={() => removeContentField(index)}\n                    >\n                      Remove\n                    </button>\n                  </div>\n                ))}\n                <button\n                  className=\"grey-button margin-top-small\"\n                  type=\"button\"\n                  onClick={addContentField}\n                >\n                  Add More Contents\n                </button>\n              </div>\n              <button type=\"submit\" className=\"blue-btn margin-top\">\n                Submit Container\n              </button>\n            </form>\n          ) : null}\n        </div>\n      </div>\n\n      <div className=\"filter-container\">\n        <label>\n          Filter by Product\n          <select\n            value={selectedProduct}\n            onChange={handleProductFilterChange}\n            className=\"select\"\n          >\n            <option value=\"\">All Products</option>\n            {products.map((product) => (\n              <option key={product.id} value={product.id}>\n                {product.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n\n      <table className=\"inventory-table\">\n        <thead>\n          <tr>\n            <th>Shelf</th>\n            <th>Row</th>\n            <th colSpan={products.length + 1}>Contents</th>\n          </tr>\n        </thead>\n        <tbody>{tableRows}</tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Inventory;\n","import { useContext } from \"react\";\nimport { ProductsContext } from \"../contexts/ProductsContext\";\nimport { useNavigate, Link, useParams } from \"react-router-dom\";\n\nfunction Product() {\n  const navigate = useNavigate();\n  let { id } = useParams();\n  id = parseInt(id);\n  const { products, setProducts } = useContext(ProductsContext);\n  const product = products.find((product) => product.id === parseInt(id));\n\n  if (!product) {\n    return <p>Product not found</p>;\n  }\n\n  function handleDelete() {\n    fetch(`/products/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((r) => {\n        if (!r.ok) {\n          throw new Error(\"Failed to delete product\");\n        }\n        if (r.status === 204) {\n          return {};\n        }\n        return r.json();\n      })\n      .then(() => {\n        const updatedProducts = products.filter((product) => product.id !== id);\n        setProducts(updatedProducts);\n        navigate(\"/products\");\n      })\n      .catch((error) => {\n        console.error(\"Error deleting product:\", error);\n      });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"product\">\n        <h1>{product.name}</h1>\n        <p>EPA Reg: {product.epa_reg}</p>\n        <div className=\"product-options\">\n          <button className=\"blue-btn button-width\">\n            <Link to={`/products/${id}/edit`}>Edit</Link>\n          </button>\n          <button className=\"remove-btn button-width\" onClick={handleDelete}>\n            Remove\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Product;\n","import { useContext, useState } from \"react\";\nimport { ProductsContext } from \"../contexts/ProductsContext\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nfunction EditProduct() {\n  const navigate = useNavigate();\n  let { id } = useParams();\n  id = parseInt(id);\n  const { products, setProducts } = useContext(ProductsContext);\n  const product = products.find((product) => product.id === parseInt(id));\n\n  const [name, setName] = useState(product.name);\n  const [epaReg, setEpaReg] = useState(product.epa_reg);\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleEpaRegChange = (e) => {\n    setEpaReg(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const updatedProduct = { ...product, name, epa_reg: epaReg };\n\n    // Make the API call to update the product in the database\n    fetch(`/products/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedProduct),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to update product\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        const updatedProducts = products.map((p) =>\n          p.id === updatedProduct.id ? updatedProduct : p\n        );\n        setProducts(updatedProducts);\n        navigate(\"/products\");\n      })\n      .catch((error) => {\n        console.error(\"Error updating product:\", error);\n        // Handle error (e.g., show a notification to the user)\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input type=\"text\" value={name} onChange={handleNameChange} />\n        </label>\n        <label>\n          EPA Reg\n          <input type=\"text\" value={epaReg} onChange={handleEpaRegChange} />\n        </label>\n        <button type=\"submit\" className=\"blue-btn\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default EditProduct;\n","import { useContext} from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport { ProductsContext } from \"../contexts/ProductsContext\";\n\nfunction Container() {\n  const navigate = useNavigate();\n\n  let { id } = useParams();\n  id = parseInt(id);\n\n  const { user, setUser } = useContext(UserContext);\n  const { products } = useContext(ProductsContext);\n\n  const container = user.containers.find((container) => container.id === id);\n\n  if (!container) {\n    return <p>Loading...</p>;\n  }\n\n  function handleDelete() {\n    fetch(`/containers/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((r) => {\n        if (!r.ok) {\n          throw new Error(\"Failed to delete product\");\n        }\n        if (r.status === 204) {\n          return {};\n        }\n        return r.json();\n      })\n      .then(() => {\n        const updatedContainers = user.containers.filter(\n          (container) => container.id !== id\n        );\n        setUser({ ...user, containers: updatedContainers });\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        console.error(\"Error deleting product:\", error);\n      });\n  }\n\n  return (\n    <div>\n      <table className=\"inventory-table margin-top-4em\">\n        <thead>\n          <tr>\n            <th>Shelf</th>\n            <th>Row</th>\n            <th colSpan={products.length + 1}>Contents</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{container.shelf}</td>\n            <td>{container.row}</td>\n            {container.contents.map((content, index) => (\n              <td key={index}>\n                {content.concentration}% {\"\"}\n                {\n                  products.find((product) => product.id === content.product_id)\n                    ?.name\n                }\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <div className=\"product-options\">\n        <button className=\"blue-btn\">\n          <Link to={`/containers/${id}/edit`}>Edit</Link>\n        </button>\n        <button className=\"remove-btn\" onClick={handleDelete}>\n          Remove\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Container;\n","import { useContext, useState, useEffect } from \"react\";\nimport { ProductsContext } from \"../contexts/ProductsContext\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nfunction EditContainer() {\n  const navigate = useNavigate();\n  let { id } = useParams();\n  id = parseInt(id);\n\n  const { user, setUser } = useContext(UserContext);\n  const { products } = useContext(ProductsContext);\n\n  const container = user.containers.find((container) => container.id === id);\n\n  const [shelf, setShelf] = useState(container?.shelf || \"\");\n  const [row, setRow] = useState(container?.row || \"\");\n  const [contents, setContents] = useState(container?.contents || []);\n\n  useEffect(() => {\n    if (container) {\n      setShelf(container.shelf);\n      setRow(container.row);\n      setContents(container.contents);\n    }\n  }, [container]);\n\n  function handleShelfChange(event) {\n    setShelf(event.target.value);\n  }\n\n  function handleRowChange(event) {\n    setRow(event.target.value);\n  }\n\n  function handleContentChange(index, key, value) {\n    const updatedContents = [...contents];\n    updatedContents[index][key] = value;\n    setContents(updatedContents);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const updatedContainer = {\n      id: container.id,\n      shelf,\n      row,\n      contents_attributes: contents,\n    };\n\n    fetch(`/containers/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ container: updatedContainer }),\n    })\n      .then((r) => {\n        if (!r.ok) {\n          throw new Error(\"Failed to update container\");\n        }\n        return r.json();\n      })\n      .then((updatedContainer) => {\n        const updatedContainers = user.containers.map((c) =>\n          c.id === id ? updatedContainer : c\n        );\n        setUser({ ...user, containers: updatedContainers });\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        console.error(\"Error updating container:\", error);\n      });\n  }\n\n  if (!container) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <label>\n          Shelf\n          <select value={shelf} onChange={handleShelfChange}>\n            {[...Array(10).keys()].map((i) => (\n              <option key={i + 1} value={i + 1}>\n                {i + 1}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          Row\n          <select value={row} onChange={handleRowChange}>\n            {[\"A\", \"B\", \"C\", \"D\", \"E\"].map((r) => (\n              <option key={r} value={r}>\n                {r}\n              </option>\n            ))}\n          </select>\n        </label>\n        {contents.map((content, index) => (\n          <div key={index}>\n            <label>\n              Product\n              <select\n                value={content.product_id}\n                onChange={(e) =>\n                  handleContentChange(\n                    index,\n                    \"product_id\",\n                    parseInt(e.target.value)\n                  )\n                }\n              >\n                {products.map((product) => (\n                  <option key={product.id} value={product.id}>\n                    {product.name}\n                  </option>\n                ))}\n              </select>\n            </label>\n            <label>\n              Concentration\n              <input\n                type=\"number\"\n                value={content.concentration}\n                onChange={(e) =>\n                  handleContentChange(\n                    index,\n                    \"concentration\",\n                    parseInt(e.target.value)\n                  )\n                }\n              />\n            </label>\n          </div>\n        ))}\n        <button type=\"submit\" className=\"blue-btn\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default EditContainer;\n","import \"../styles/App.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport Login from \"./Login\";\nimport { Routes, Route } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport Products from \"./Products\";\nimport Inventory from \"./Inventory\";\nimport Product from \"./Product\";\nimport EditProduct from \"./EditProduct\";\nimport Container from \"./Container\";\nimport EditContainer from \"./EditContainer\";\n\nfunction App() {\n  const { user } = useContext(UserContext);\n  if (!user) {\n    return <Login />;\n  }\n\n  return (\n    <>\n      <header className=\"header\">\n        <NavBar />\n      </header>\n      <main>\n        <Routes>\n          <Route path=\"/\" element={<Inventory />} />\n          <Route path=\"/products\" element={<Products />} />\n          <Route path=\"/products/:id\" element={<Product />} />\n          <Route path=\"/products/:id/edit\" element={<EditProduct />} />\n          <Route path=\"/containers/:id\" element={<Container />} />\n          <Route path=\"/containers/:id/edit\" element={<EditContainer />} />\n        </Routes>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./pages/App\";\nimport reportWebVitals from \"./scripts/reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { UserProvider } from \"./contexts/UserContext\";\nimport { ProductsProvider } from \"./contexts/ProductsContext\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <UserProvider>\n      <ProductsProvider>\n        <App />\n      </ProductsProvider>\n    </UserProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}